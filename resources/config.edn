{:service-name "kixi.search"
 :es #profile {:local {:protocol "http"
                       :host #or [#env ELASTICSEARCH "localhost"]
                       :port 9200}
               :staging {:protocol "https"
                         :host "vpc-staging-kixi-s2e6qmw2ijwt6fuwde6gmg7x64.eu-central-1.es.amazonaws.com"
                         :port 443}
               :prod  {:protocol "https"
                       :host "vpc-prod-kixi-qqdthzvtvt3nlcggx3bzxlzpdi.eu-west-1.es.amazonaws.com"
                       :port 443}}
 :logging {:level #profile {:default :info
                            :prod :error} ; e/o #{:trace :debug :info :warn :error :fatal :report}
           ;; Control log filtering by namespaces/patterns. Useful for turning off
           ;; logging in noisy libraries, etc.:
           ;;:ns-whitelist  ["whiner.*"] #_["my-app.foo-ns"]
           :ns-blacklist ["org.eclipse.jetty" "org.apache.http"]
           :kixi-comms-verbose-logging #profile {:default true
                                                 :staging true
                                                 :prod true}
           :appender #profile {:default :println
                               :staging :json
                               :prod :json}}
 :web #profile {:local {:port 8091
                        :request-logging? true}
                :staging-integration {:port 8091
                                      :request-logging? true}
                :staging-jenkins {:port 8091
                                  :request-logging? true}
                :staging {:port 18091
                          :request-logging? true}
                :prod {:port 18091
                       :request-logging? true}}

 :index-manager ^:ref [:es]

 :metadata-query ^:ref [:es]
 :metadata-update ^:ref [:es]
 :metadata-bundle-delete ^:ref [:es]
 :metadata-bundle-add-files ^:ref [:es]
 :metadata-bundle-remove-files ^:ref [:es]

 :communications #profile  {:local {:coreasync {:app "kixi.search"
                                                :metrics-level :NONE}}
                            :local-kinesis {:kinesis {:app "kixi.search"
                                                      :endpoint "kinesis.eu-central-1.amazonaws.com"
                                                      :region-name "eu-central-1"
                                                      :dynamodb-endpoint #or [#env DYNAMODB "http://localhost:8000"]
                                                      :streams {:event #or [#env EVENT_STREAM  "kixi-search-local-event"]}
                                                      :metrics-level :NONE
                                                      :initial-lease-table-read-capacity 1
                                                      :initial-lease-table-write-capacity 1
                                                      :teardown-kinesis true
                                                      :teardown-dynamodb true
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 100]
                                                      }}
                            :staging-jenkins {:coreasync {:app "kixi.search"}}
                            :staging {:kinesis {:app "kixi.search"
                                                :endpoint "kinesis.eu-central-1.amazonaws.com"
                                                :region-name "eu-central-1"
                                                :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                                :initial-lease-table-read-capacity 1
                                                :initial-lease-table-write-capacity 1
                                                :streams {:event "staging-witan-event"}
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 200]
                                                :metrics-level :NONE
                                                }}
                            :staging-integration {:kinesis {:app "kixi.search-staging-test"
                                                            :endpoint "kinesis.eu-central-1.amazonaws.com"
                                                            :region-name "eu-central-1"
                                                            :dynamodb-endpoint "dynamodb.eu-central-1.amazonaws.com"
                                                            :initial-lease-table-read-capacity 1
                                                            :initial-lease-table-write-capacity 1
                                                            :streams {:event "staging-witan-event"}
                                                            :teardown-dynamodb true
                                                            :metrics-level :NONE
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 200]
                                                            }}
                            :prod {:kinesis {:app "kixi.search"
                                             :endpoint "kinesis.eu-west-1.amazonaws.com"
                                             :region-name "eu-west-1"
                                             :dynamodb-endpoint "dynamodb.eu-west-1.amazonaws.com"
                                             :initial-lease-table-read-capacity 2
                                             :initial-lease-table-write-capacity 2
                                             :streams {:event "prod-witan-event"}
                                             :initial-position-in-stream-date "20180212T230000Z"
                                             :metrics-level :NONE
                                        ;:idle-time-between-reads-in-millis #or [#env KINESIS_IDLE 200]
                                             }}}
 :repl {:port 5002}}
